// == [ UTILTIES ] =============================================================
.clearfix() {
    &:before, &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

.tab-focus() {
    outline: thin dotted #333;
    outline: 5px auto -webkit-focus-ring-color;
    outline-offset: -2px;
}

.text-overflow() {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.placeholder(@color: @input-color-placeholder) {
    &:-moz-placeholder            { color: @color; } // Firefox 4-18
    &::-moz-placeholder           { color: @color; } // Firefox 19+
    &:-ms-input-placeholder       { color: @color; } // Internet Explorer 10+
    &::-webkit-input-placeholder  { color: @color; } // Safari and Chrome
}

// == [ CSS3 PROPERTIES ] ======================================================
.box-shadow(@shadow) {
    -webkit-box-shadow: @shadow; // iOS <4.3 & Android <4.1
    box-shadow: @shadow;
}

.box-sizing(@boxmodel) {
    -webkit-box-sizing: @boxmodel;
    -moz-box-sizing: @boxmodel;
    box-sizing: @boxmodel;
}

.opacity(@opacity) {
    opacity: @opacity;
    @opacity-ie: (@opacity * 100);
    filter: ~"alpha(opacity=@{opacity-ie})";
}

.transition(@transition) {
    -webkit-transition: @transition;
    -moz-transition: @transition;
    -o-transition: @transition;
    transition: @transition;
}

// == [ COMPONENTS ] ===========================================================
.btn-pseudo-states(@color, @background) {
    color: @color;
    background-color: @background;

    &:hover,
    &:focus,
    &:active,
    &.active {
        background-color: darken(@background, 5%);
    }

    &.disabled,
    &[disabled],
    fieldset[disabled] & {
        &,
        &:hover,
        &:focus,
        &:active,
        &.active {
            background-color: @background;
        }
    }
}

// == [ GRID SYSTEM ] ==========================================================
.container-fixed() {
    margin-right: auto;
    margin-left: auto;
    .clearfix();
}

.make-row() {
    .clearfix();

    @media (min-width: @screen-small) {
        margin-left:  (@grid-gutter-width / -2);
        margin-right: (@grid-gutter-width / -2);
    }

    .row {
        margin-left:  (@grid-gutter-width / -2);
        margin-right: (@grid-gutter-width / -2);
    }
}

.make-column(@columns) {
    position: relative;
    min-height: 1px;
    padding-left:  (@grid-gutter-width / 2);
    padding-right: (@grid-gutter-width / 2);

    @media (min-width: @grid-float-breakpoint) {
        float: left;
        width: percentage((@columns / @grid-columns));
    }
}

.make-column-offset(@columns) {
    @media (min-width: @grid-float-breakpoint) {
        margin-left: percentage((@columns / @grid-columns));
    }
}

.make-column-push(@columns) {
    @media (min-width: @grid-float-breakpoint) {
        left: percentage((@columns / @grid-columns));
    }
}

.make-column-pull(@columns) {
    @media (min-width: @grid-float-breakpoint) {
        right: percentage((@columns / @grid-columns));
    }
}
